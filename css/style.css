/*імпортуємо шрифт */
@import url('https://fonts.googleapis.com/css2?family=Inter:ital,opsz,wght@0,14..32,100..900;1,14..32,100..900&display=swap');

/*

* Для всіх елементів
padding: 0; і margin: 0; видаляють внутрішні відступи та зовнішні поля для всіх елементів. Це часто робиться, щоб уникнути різних відступів і полів, заданих браузером за замовчуванням.
box-sizing: border-box; змінює модель коробки, так що ширина і висота елемента включають відступи (padding) і межі (border). Це спрощує роботу з розмірами елементів.
Це хороша практика для встановлення базових стилів у проекті, що забезпечує більш прогнозовану та контрольовану поведінку елементів на сторінці. Після цього ви можете почати створювати свій унікальний дизайн на основі цього базового налаштування.
*/

*{
    padding: 0;
    margin: 0;
    box-sizing: border-box;
}

/*У CSS, селектор :root використовується для застосування стилів до кореневого елемента документа, який зазвичай є елементом <html>. Це особливо корисно при оголошенні глобальних змінних CSS, які потім можуть використовуватися в інших частинах стилів.*/

:root{
     --primary-color:#ff7613;
     --text-color: 727171 
}

/*змінює базовий розмір шрифту для всього документа. У цьому випадку базовий розмір шрифту встановлюється на 10 пікселів для елемента <html>, що є кореневим елементом вашого документа.*/
html {
    font-size: 10px;
}

body {
    font-family: Inter, sans-serif;
    background-color: black;
    color: white;
}

img {
    width: 100%;
}

/*Общие (common styles) */
a {
    text-decoration: none;
    color: white; 
}

.description{
    margin-top: 1rem;
    font-size: 1.5rem;
    font-weight: 400;
    color: var(--text-color);
}

/*Макети */
.container {
    max-width: 1000px; /* Максимальна ширина контейнера – 1000 пікселів. */
    width: 90%; /* Ширина контейнера – 90% від ширини батьківського елемента. */
    margin: 0 auto; /* Встановлює автоматичні відступи зліва і справа, що центрує контейнер на сторінці. Відступ зверху та знизу – 0. */
    display: grid; /* Застосовує до контейнера CSS Grid Layout, дозволяючи розміщувати його вміст у сітку. */
    padding: 5rem; /* Внутрішній відступ (padding) всередині контейнера – 5 ремів (rem). */
    background: #070707; /* Колір фону контейнера – темний, майже чорний (#070707). */
    grid-template-columns: 1fr 1fr; /* Визначає дві колонки однакової ширини (по 1 частці простору кожна) в сітці. */
     /* Встановлює відстань у 4 реми між колонками і рядками в сітці. */

}

@media only screen and (max-width: 768px) {
    .container {
      
        width: 100%; /* Ширина контейнера стає 100% від ширини батьківського елемента, займаючи всю доступну ширину. */
        grid-template-columns: 1fr;
        padding: 3rem; /* Внутрішні відступи контейнера зменшуються до 3 ремів з усіх боків. */
        gap: 7rem; /* Відстань між елементами в сітці збільшується до 7 ремів. */
        color: red;
    }
}

.profile {
    grid-column: 1 / -1; /* - елемент .profile займає весь рядок у сітці CSS Grid, починаючи з першого стовпчика до останнього.*/
    margin-bottom: 2rem; /*додає відступ знизу елемента, щоб відокремити його від наступного елемента.*/
}

/* profile */

.profile_container{
    display: flex; /* - елемент .profile_container використовує Flexbox для розташування його дочірніх елементів.*/
    gap: 2rem; /* - встановлює відступ у 2 реми між дочірніми елементами контейнера.*/
}

.profile_profileImg{
    max-width: 250px; /*- обмежує максимальну ширину зображення профілю до 250 пікселів.*/
}

.profile_name_firstName{
    color:white;
    font-weight: 450; /*- задає тонкий стиль тексту для першого імені.*/
    font-size: clamp(2rem, 8vw, 4rem); /*- розмір шрифту адаптується відповідно до ширини вікна: від 2rem до 4rem з середнім значенням 8vw (відсоток ширини вікна).*/
    text-transform: uppercase; /*- перетворює текст у великі літери.*/
    display: block; /*елемент відображається як блоковий елемент, що займає всю ширину.*/
    margin-bottom: - 0.5rem; /*- задає від'ємний відступ знизу, щоб підняти друге ім'я ближче до першого.*/
}

.profile_name_lastName{
    color: var(--primary-color); /* задає основний колір теми (primary color) для прізвища.*/
    font-weight: 600; /*- задає жирний стиль тексту для прізвища.*/
    font-size: clamp(2.0rem, 10vw, 5rem); /*- розмір шрифту для прізвища також адаптується відповідно до ширини вікна: від 2.5rem до 7rem з середнім значенням 15vw.*/
    text-transform: uppercase; /*- перетворює текст у великі літери.*/
    display: block; /*- елемент відображається як блоковий елемент.*/
}

.profile_title {
    font-size: 2.0rem; /*- встановлює розмір шрифту 2 реми для заголовка.*/
    font-weight: 400; /*- середня товщина шрифту.*/
    text-transform: uppercase; /*- перетворює текст заголовка у великі літери.*/
}

.downloadBtn{
    display: block; /*- робить кнопку блочною, тобто вона займатиме всю доступну ширину.*/
    text-decoration:underline; /*- підкреслює текст кнопки.*/
    font-size: 1.6rem; /* задає розмір шрифту 1.6 реми.*/
    margin-top: 1rem;/*- додає відступ зверху.*/
    color:rgb(166, 160, 180); /* - задає колір тексту для кнопки.*/
}

.downloadBtn:hover{
    color: var(--primary-color); /* - змінює колір тексту кнопки на основний колір теми при наведенні.*/
}

@media only screen and (max-width: 768px) {
    .profile_container {
      flex-direction: column; /*- змінює напрямок Flexbox контейнера з рядкового (горизонтального) на колонковий (вертикальний) при малих розмірах екрана.*/
        
    }
}